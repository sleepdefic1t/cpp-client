name: Test

on:
  push:
    branches:
      - 'master'
      - 'develop'
  pull_request:
    types: [ready_for_review, synchronize, opened]

jobs:
  # arduino:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v1
  #     - name: Make scripts executable
  #       run: sudo chmod -R +x ./.github/workflows/test/*.sh
  #     - name: Install Dependencies
  #       run: ./.github/workflows/test/install_arduino.sh
  #     - name: Build Arduino Sketch
  #       run: ./.github/workflows/test/script_arduino.sh

  # platformio:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v1
  #     - name: Install Dependencies
  #       run: |
  #         sudo pip install -U platformio
  #         platformio update
  #     - name: Build
  #       run: |
  #         platformio run
  #         platformio run -d ./test

  # linux-gcc7:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v1
  #     - name: Install Dependencies
  #       run: |
  #         sudo apt-add-repository -y ppa:ubuntu-toolchain-r/test
  #         sudo apt-get update
  #         sudo apt-get -y install g++-7 cmake openssl
  #     - name: Build
  #       run: |
  #         mkdir build && cd build
  #         cmake -DUNIT_TEST=ON ..
  #         cmake --build .
  #     - name: Run Tests
  #       run: ./build/test/ark_cpp_client_tests

  # linux-clang-5:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v1
  #     - name: Install Dependencies
  #       run: |
  #         sudo apt-get update
  #         sudo apt-get -y install clang-5.0 clang-format-5.0 clang-tidy-5.0 lcov cmake openssl
  #     - name: Make scripts executable
  #       run: sudo chmod -R +x ./.github/workflows/test/*.sh
  #     - name: Build
  #       run: |
  #         mkdir build && cd build
  #         cmake -DUNIT_TEST=ON ..
  #         cmake --build .
  #     - name: Run Tests
  #       run: ./build/test/ark_cpp_client_tests
  #     - name: Clang Tidy
  #       run: ./.github/workflows/test/clang_tidy.sh
  #     - name: Clang Format
  #       run: ./.github/workflows/test/clang_format.sh

  # macos:
  #   runs-on: macOS-latest

  #   steps:
  #     - uses: actions/checkout@v1
  #     - run: COMPILER=clang++
  #     - name: Install Dependencies
  #       run: brew install cmake
  #     - name: Build
  #       run: |
  #         mkdir build && cd build
  #         cmake -DUNIT_TEST=ON ..
  #         cmake --build .
  #     - name: Run Tests
  #       run: ./build/test/ark_cpp_client_tests

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        build: [Debug]

    steps:
      - uses: actions/checkout@v1
      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v1.0.2
      - name: CMake
        run: cmake -D UNIT_TEST=ON -DCURL_STATICLIB=ON -G "Visual Studio 16 2019" .
      - name: dir
        run: dir %GITHUB_WORKSPACE%/extern/curl/src/build/lib
      - name: Build Solution
        shell: cmd
        run: msbuild "%GITHUB_WORKSPACE%\ark_cpp_client.sln"
      - name: Run Tests
        shell: cmd
        run: "%GITHUB_WORKSPACE%\\test\\Debug\\ark_cpp_client_tests.exe"
