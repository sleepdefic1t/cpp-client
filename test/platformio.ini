; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; http://docs.platformio.org/page/projectconf.html

[platformio]
description = "Unit Tests for Ark-Cpp-Client"
src_dir = ../src
build_dir = ../build/.pioenvs
libdeps_dir = ../extern/.piolibdeps

[common]
lib_deps = https://github.com/ciband/googletest.git#pre_release
build_flags = -I../test -I../src -I../src/include/cpp-client -DUNIT_TEST
src_filter = +<../src> +<../test/iot> +<../test/mocks> -<../src/http/os> -<../test/http> #ignore live HTTP tests on IoT
upload_speed = 921600

[esp8266]
board_build.f_cpu = 160000000L

[all_tests]
src_filter = +<../test/api> +<../test/connection>

[api_blockchain_tests]
src_filter = +<../test/api/blockchain.cpp>

[api_blocks_tests]
src_filter = +<../test/api/blocks.cpp>

[api_delegates_tests]
src_filter = +<../test/api/delegates.cpp>

[api_node_tests]
src_filter = +<../test/api/node.cpp>

[api_paths_tests]
src_filter = +<../test/api/paths.cpp>

[api_peers_tests]
src_filter = +<../test/api/peers.cpp>

[api_rounds_tests]
src_filter = +<../test/api/rounds.cpp>

[api_transactions_tests]
src_filter = +<../test/api/transactions.cpp>

[api_votes_tests]
src_filter = +<../test/api/votes.cpp>

[api_wallets_tests]
src_filter = +<../test/api/wallets.cpp>

[connection_tests]
src_filter = +<../test/connection>

[http_tests]
src_filter = +<../test/http>

[env:esp8266_api_blockchain_tests]
platform = https://github.com/platformio/platform-espressif8266.git
board = huzzah
framework = arduino
lib_deps = ${common.lib_deps}
build_flags = ${common.build_flags}
src_filter = ${common.src_filter}  ${api_blockchain_tests.src_filter}
upload_speed = ${common.upload_speed}
board_build.f_cpu = ${esp8266.board_build.f_cpu}

[env:esp8266_api_blocks_tests]
platform = https://github.com/platformio/platform-espressif8266.git
board = huzzah
framework = arduino
lib_deps = ${common.lib_deps}
build_flags = ${common.build_flags}
src_filter = ${common.src_filter}  ${api_blocks_tests.src_filter}
upload_speed = ${common.upload_speed}
board_build.f_cpu = ${esp8266.board_build.f_cpu}

[env:esp8266_api_delegates_tests]
platform = https://github.com/platformio/platform-espressif8266.git
board = huzzah
framework = arduino
lib_deps = ${common.lib_deps}
build_flags = ${common.build_flags}
src_filter = ${common.src_filter}  ${api_delegates_tests.src_filter}
upload_speed = ${common.upload_speed}
board_build.f_cpu = ${esp8266.board_build.f_cpu}

[env:esp8266_api_node_tests]
platform = https://github.com/platformio/platform-espressif8266.git
board = huzzah
framework = arduino
lib_deps = ${common.lib_deps}
build_flags = ${common.build_flags}
src_filter = ${common.src_filter}  ${api_node_tests.src_filter}
upload_speed = ${common.upload_speed}
board_build.f_cpu = ${esp8266.board_build.f_cpu}

[env:esp8266_api_paths_tests]
platform = https://github.com/platformio/platform-espressif8266.git
board = huzzah
framework = arduino
lib_deps = ${common.lib_deps}
build_flags = ${common.build_flags}
src_filter = ${common.src_filter}  ${api_paths_tests.src_filter}
upload_speed = ${common.upload_speed}
board_build.f_cpu = ${esp8266.board_build.f_cpu}

[env:esp8266_api_peers_tests]
platform = https://github.com/platformio/platform-espressif8266.git
board = huzzah
framework = arduino
lib_deps = ${common.lib_deps}
build_flags = ${common.build_flags}
src_filter = ${common.src_filter}  ${api_peers_tests.src_filter}
upload_speed = ${common.upload_speed}
board_build.f_cpu = ${esp8266.board_build.f_cpu}

[env:esp8266_api_rounds_tests]
platform = https://github.com/platformio/platform-espressif8266.git
board = huzzah
framework = arduino
lib_deps = ${common.lib_deps}
build_flags = ${common.build_flags}
src_filter = ${common.src_filter}  ${api_rounds_tests.src_filter}
upload_speed = ${common.upload_speed}
board_build.f_cpu = ${esp8266.board_build.f_cpu}

[env:esp8266_api_transactions_tests]
platform = https://github.com/platformio/platform-espressif8266.git
board = huzzah
framework = arduino
lib_deps = ${common.lib_deps}
build_flags = ${common.build_flags}
src_filter = ${common.src_filter}  ${api_transactions_tests.src_filter}
upload_speed = ${common.upload_speed}
board_build.f_cpu = ${esp8266.board_build.f_cpu}

[env:esp8266_api_votes_tests]
platform = https://github.com/platformio/platform-espressif8266.git
board = huzzah
framework = arduino
lib_deps = ${common.lib_deps}
build_flags = ${common.build_flags}
src_filter = ${common.src_filter}  ${api_votes_tests.src_filter}
upload_speed = ${common.upload_speed}
board_build.f_cpu = ${esp8266.board_build.f_cpu}

[env:esp8266_api_wallets_tests]
platform = https://github.com/platformio/platform-espressif8266.git
board = huzzah
framework = arduino
lib_deps = ${common.lib_deps}
build_flags = ${common.build_flags}
src_filter = ${common.src_filter}  ${api_wallets_tests.src_filter}
upload_speed = ${common.upload_speed}
board_build.f_cpu = ${esp8266.board_build.f_cpu}

[env:esp8266_connection_tests]
platform = https://github.com/platformio/platform-espressif8266.git
board = huzzah
framework = arduino
lib_deps = ${common.lib_deps}
build_flags = ${common.build_flags}
src_filter = ${common.src_filter}  ${connection_tests.src_filter}
upload_speed = ${common.upload_speed}
board_build.f_cpu = ${esp8266.board_build.f_cpu}

[env:esp32_tests]
platform = espressif32
board = esp32dev
framework = arduino
lib_deps = ${common.lib_deps}
build_flags = ${common.build_flags}
src_filter = ${common.src_filter} ${all_tests.src_filter}
upload_speed = ${common.upload_speed}
